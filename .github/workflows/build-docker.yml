name: Build Docker Image

on:
  workflow_run:
    workflows: ["Build a release"] # Name of the workflow in bump-version.yml
    types:
      - completed
  # push:
  #   branches: ["master"]
  # pull_request:
  #   branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate with GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Download gatesentry-linux binary for amd64
        run: |
          gh release download -R ydethe/Gatesentry -p "gatesentry-linux"
          gh release download -R ydethe/Gatesentry -p "gatesentry-linux-arm64"

      #   - name: Download gatesentry-linux binary from latest release
      #     run: |
      #       wget $(curl -s https://api.github.com/repos/fifthsegment/Gatesentry/releases/latest | jq -r '.assets[] | select(.name == "gatesentry-linux") | .browser_download_url')
      #       wget $(curl -s https://api.github.com/repos/fifthsegment/Gatesentry/releases/latest | jq -r '.assets[] | select(.name == "gatesentry-linux-arm64") | .browser_download_url')
      - name: Create entrypoint.sh script
        run: |
          echo '#!/bin/sh' > entrypoint.sh
          echo 'arch=$(uname -m)' >> entrypoint.sh
          echo 'chmod +x /usr/local/gatesentry/gatesentry-linux' >> entrypoint.sh
          echo 'chmod +x /usr/local/gatesentry/gatesentry-linux-arm64' >> entrypoint.sh
          echo 'if [ "$arch" = "aarch64" ]; then' >> entrypoint.sh
          echo '  echo "Running on arm64"' >> entrypoint.sh
          echo '  exec /usr/local/gatesentry/gatesentry-linux-arm64' >> entrypoint.sh
          echo 'else' >> entrypoint.sh
          echo '  exec /usr/local/gatesentry/gatesentry-linux' >> entrypoint.sh
          echo 'fi' >> entrypoint.sh
          chmod +x entrypoint.sh

      - name: Create Dockerfile
        run: |
          echo 'ARG BINARY_NAME' > Dockerfile
          echo 'FROM ubuntu:latest' >> Dockerfile
          echo 'USER root' >> Dockerfile
          echo 'RUN apt-get update && apt-get install -y net-tools dnsutils && rm -rf /var/lib/apt/lists/*' >> Dockerfile
          echo 'RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*' >> Dockerfile
          echo "COPY \${BINARY_NAME} /usr/local/gatesentry" >> Dockerfile
          echo 'COPY entrypoint.sh /entrypoint.sh' >> Dockerfile
          echo 'RUN chmod +x /usr/local/gatesentry/${BINARY_NAME}' >> Dockerfile
          echo 'EXPOSE 80 53 10413 10786' >> Dockerfile
          echo 'ENTRYPOINT ["/entrypoint.sh"]' >> Dockerfile

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          #   tags: abdullahi1/gatesentry:${{ github.event.release.tag_name }}
          tags: ydethe/gatesentry:latest
          platforms: linux/amd64,linux/arm64
          build-args: |
            BINARY_NAME=gatesentry-linux${{ matrix.platform == 'linux/arm64' && '-arm64' || '' }}
